{"version":3,"file":"35.js","mappings":"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","sources":["webpack://sleact-ts-front/./components/Modal/styles.ts","webpack://sleact-ts-front/./components/Modal/index.tsx","webpack://sleact-ts-front/./components/inviteChannelModal/index.tsx","webpack://sleact-ts-front/./hooks/useSocket.ts","webpack://sleact-ts-front/./layouts/Workspace/styles.ts","webpack://sleact-ts-front/./components/Menu/styles.ts","webpack://sleact-ts-front/./components/Menu/index.tsx","webpack://sleact-ts-front/./components/createChannelModal/index.tsx","webpack://sleact-ts-front/./components/inviteWorkspaceModal/index.tsx","webpack://sleact-ts-front/./components/DMList/styles.ts","webpack://sleact-ts-front/./components/EachChannel/index.tsx","webpack://sleact-ts-front/./components/ChannelList/index.tsx","webpack://sleact-ts-front/./components/EachDM/index.tsx","webpack://sleact-ts-front/./components/DMList/index.tsx","webpack://sleact-ts-front/./layouts/Workspace/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const CreateModal = styled.div`\r\n  position: fixed;\r\n  text-align: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 1022;\r\n  & > div {\r\n    margin-top: 200px;\r\n    display: inline-block;\r\n    width: 440px;\r\n    background: white;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    max-width: 440px;\r\n    padding: 30px 40px 0;\r\n    z-index: 1012;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import { CreateModal, CloseModalButton } from '@components/Modal/styles';\r\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  return (\r\n    <CreateModal onClick={onCloseModal}>\r\n      <div onClick={stopPropagation}>\r\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\r\n        {children}\r\n      </div>\r\n    </CreateModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteChannelModal: (flag: boolean) => void;\r\n}\r\nconst InviteChannelModal: FC<Props> = ({ show, onCloseModal, setShowInviteChannelModal }) => {\r\n  const { workspace, channel } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: mutateMembers } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels/${channel}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          mutateMembers();\r\n          setShowInviteChannelModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [channel, newMember, mutateMembers, setNewMember, setShowInviteChannelModal, workspace],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>채널 멤버 초대</span>\r\n          <Input id=\"member\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteChannelModal;\r\n","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nconst backUrl = 'http://localhost:3095';\r\n\r\nconst sockets: { [key: string]: SocketIOClient.Socket } = {};\r\n\r\nconst useSocket = (workspace?: string): [SocketIOClient.Socket | undefined, () => void] => {\r\n  const disconnect = useCallback(() => {\r\n    if (workspace) {\r\n      sockets[workspace].disconnect();\r\n      delete sockets[workspace];\r\n    }\r\n  }, [workspace]);\r\n\r\n  if (!workspace) {\r\n    return [undefined, disconnect];\r\n  }\r\n  if (!sockets[workspace]) {\r\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\r\n      transports: ['websocket'],\r\n    });\r\n    console.info('create socket', workspace, sockets[workspace]);\r\n  }\r\n\r\n  return [sockets[workspace], disconnect];\r\n};\r\n\r\nexport default useSocket;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const RightMenu = styled.div`\r\n  float: right;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  height: 38px;\r\n  background: #350d36;\r\n  color: #ffffff;\r\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\r\n  padding: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n  width: 28px;\r\n  height: 28px;\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 16px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ProfileModal = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n  & img {\r\n    display: flex;\r\n  }\r\n  & > div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  }\r\n  & #profile-name {\r\n    font-weight: bold;\r\n    display: inline-flex;\r\n  }\r\n  & #profile-active {\r\n    font-size: 13px;\r\n    display: inline-flex;\r\n  }\r\n`;\r\n\r\nexport const LogOutButton = styled.button`\r\n  border: none;\r\n  width: 100%;\r\n  border-top: 1px solid rgb(29, 28, 29);\r\n  background: transparent;\r\n  display: block;\r\n  height: 33px;\r\n  padding: 5px 20px 5px;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nexport const Workspaces = styled.div`\r\n  width: 65px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #3f0e40;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-right: 1px solid rgb(82, 38, 83);\r\n  vertical-align: top;\r\n  text-align: center;\r\n  padding: 15px 0 0;\r\n`;\r\n\r\nexport const Channels = styled.nav`\r\n  width: 260px;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  background: #3f0e40;\r\n  color: rgb(188, 171, 188);\r\n  vertical-align: top;\r\n  & a {\r\n    padding-left: 36px;\r\n    color: inherit;\r\n    text-decoration: none;\r\n    height: 28px;\r\n    line-height: 28px;\r\n    display: flex;\r\n    align-items: center;\r\n    &.selected {\r\n      color: white;\r\n    }\r\n  }\r\n  & .bold {\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n  & .count {\r\n    margin-left: auto;\r\n    background: #cd2553;\r\n    border-radius: 16px;\r\n    display: inline-block;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    height: 18px;\r\n    line-height: 18px;\r\n    padding: 0 9px;\r\n    color: white;\r\n    margin-right: 16px;\r\n  }\r\n  & h2 {\r\n    height: 36px;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const WorkspaceName = styled.button`\r\n  height: 64px;\r\n  line-height: 64px;\r\n  border: none;\r\n  width: 100%;\r\n  text-align: left;\r\n  border-top: 1px solid rgb(82, 38, 83);\r\n  border-bottom: 1px solid rgb(82, 38, 83);\r\n  font-weight: 900;\r\n  font-size: 24px;\r\n  background: transparent;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  padding: 0;\r\n  padding-left: 16px;\r\n  margin: 0;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MenuScroll = styled.div`\r\n  height: calc(100vh - 102px);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const WorkspaceModal = styled.div`\r\n  padding: 10px 0 0;\r\n  & h2 {\r\n    padding-left: 20px;\r\n  }\r\n  & > button {\r\n    width: 100%;\r\n    height: 28px;\r\n    padding: 4px;\r\n    border: none;\r\n    background: transparent;\r\n    border-top: 1px solid rgb(28, 29, 28);\r\n    cursor: pointer;\r\n    &:last-of-type {\r\n      border-bottom: 1px solid rgb(28, 29, 28);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Chats = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const AddButton = styled.button`\r\n  color: white;\r\n  font-size: 24px;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const WorkspaceButton = styled.button`\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  background: white;\r\n  border: 3px solid #3f0e40;\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: black;\r\n  cursor: pointer;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CreateMenu = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  & > div {\r\n    position: absolute;\r\n    display: inline-block;\r\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\r\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\r\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\r\n    border-radius: 6px;\r\n    user-select: none;\r\n    min-width: 360px;\r\n    z-index: 512;\r\n    max-height: calc(100vh - 20px);\r\n    color: rgb(29, 28, 29);\r\n  }\r\n`;\r\n\r\nexport const CloseModalButton = styled.button`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 6px;\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { CSSProperties, FC, useCallback } from 'react';\r\nimport { CloseModalButton, CreateMenu } from './styles';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: (e: any) => void;\r\n  style: CSSProperties;\r\n  closeButton?: boolean;\r\n}\r\n\r\nconst Menu: FC<Props> = ({ children, show, style, onCloseModal, closeButton }) => {\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <CreateMenu onClick={onCloseModal}>\r\n      <div style={style} onClick={stopPropagation}>\r\n        {closeButton && <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>}\r\n        {children}\r\n      </div>\r\n    </CreateMenu>\r\n  );\r\n};\r\n\r\nMenu.defaultProps = {\r\n  closeButton: true,\r\n};\r\n\r\nexport default Menu;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { useCallback, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowCreateChannelModal: (flag: boolean) => void;\r\n}\r\n\r\nconst CreateChannelModal: VFC<Props> = ({ show, onCloseModal, setShowCreateChannelModal }) => {\r\n  const [newChannel, onChangeNewChannel, setNewChannel] = useInput('');\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n\r\n  const { data: userData } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { mutate: mutateChannel } = useSWR<IChannel[]>(\r\n    userData ? `/api/workspaces/${workspace}/channels` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onCreateChannel = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newChannel || !newChannel.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/channels`, {\r\n          name: newChannel,\r\n        })\r\n        .then(() => {\r\n          setShowCreateChannelModal(false);\r\n          mutateChannel();\r\n          setNewChannel('');\r\n        })\r\n        .catch((err) => {\r\n          console.dir(err);\r\n          toast.error(err.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newChannel],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onCreateChannel}>\r\n        <Label id=\"channel-label\">\r\n          <span>채널</span>\r\n          <Input id=\"channel\" value={newChannel} onChange={onChangeNewChannel} />\r\n        </Label>\r\n\r\n        <Button type=\"submit\">생성하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateChannelModal;\r\n","import Modal from '@components/Modal';\r\nimport useInput from '@hooks/useInput';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { FC, useCallback } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowInviteWorkspaceModal: (flag: boolean) => void;\r\n}\r\nconst InviteWorkspaceModal: FC<Props> = ({ show, onCloseModal, setShowInviteWorkspaceModal }) => {\r\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\r\n  const [newMember, onChangeNewMember, setNewMember] = useInput('');\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher);\r\n  const { mutate: revalidateMember } = useSWR<IUser[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n\r\n  const onInviteMember = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newMember || !newMember.trim()) {\r\n        return;\r\n      }\r\n      axios\r\n        .post(`/api/workspaces/${workspace}/members`, {\r\n          email: newMember,\r\n        })\r\n        .then(() => {\r\n          revalidateMember();\r\n          setShowInviteWorkspaceModal(false);\r\n          setNewMember('');\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n          toast.error(error.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newMember, workspace, revalidateMember, setShowInviteWorkspaceModal, setNewMember],\r\n  );\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      <form onSubmit={onInviteMember}>\r\n        <Label id=\"member-label\">\r\n          <span>이메일</span>\r\n          <Input id=\"member\" type=\"email\" value={newMember} onChange={onChangeNewMember} />\r\n        </Label>\r\n        <Button type=\"submit\">초대하기</Button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InviteWorkspaceModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\r\n  background: transparent;\r\n  border: none;\r\n  width: 26px;\r\n  height: 26px;\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  ${({ collapse }) =>\r\n    collapse &&\r\n    `\r\n    & i {\r\n      transform: none;\r\n    }\r\n  `};\r\n`;\r\n","import { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channel: IChannel;\r\n}\r\nconst EachChannel: VFC<Props> = ({ channel }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, channel]);\r\n\r\n  return (\r\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\r\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}># {channel.name}</span>\r\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachChannel;\r\n","import { CollapseButton } from '@components/DMList/styles';\r\nimport EachChannel from '@components/EachChannel';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  channelData?: IChannel[];\r\n  userData?: IUser;\r\n}\r\n\r\nconst ChannelList: FC<Props> = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Channels</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          channelData?.map((channel) => {\r\n            return <EachChannel key={channel.id} channel={channel} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChannelList;\r\n","import { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { useEffect, VFC } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\n\r\ninterface Props {\r\n  member: IUser;\r\n  isOnline: boolean;\r\n}\r\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const location = useLocation();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\r\n  const { data: count, mutate } = useSWR<number>(\r\n    userData ? `/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\r\n    fetcher,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\r\n      mutate(0);\r\n    }\r\n  }, [mutate, location.pathname, workspace, member]);\r\n\r\n  return (\r\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\r\n      <i\r\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\r\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\r\n        }`}\r\n        aria-hidden=\"true\"\r\n        data-qa=\"presence_indicator\"\r\n        data-qa-presence-self=\"false\"\r\n        data-qa-presence-active=\"false\"\r\n        data-qa-presence-dnd=\"false\"\r\n      />\r\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\r\n      {member.id === userData?.id && <span> (나)</span>}\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default EachDM;\r\n","import EachDM from '@components/EachDM';\r\n// import useSocket from '@hooks/useSocket';\r\nimport { CollapseButton } from '@components/DMList/styles';\r\nimport { IDM, IUser, IUserWithOnline } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useSWR from 'swr';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst DMList = () => {\r\n  const { workspace } = useParams<{ workspace?: string }>();\r\n  const { data: userData } = useSWR<IUser>('/api/users', fetcher, {\r\n    dedupingInterval: 2000, // 2초\r\n  });\r\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\r\n    userData ? `/api/workspaces/${workspace}/members` : null,\r\n    fetcher,\r\n  );\r\n  const [socket] = useSocket(workspace);\r\n  const [channelCollapse, setChannelCollapse] = useState(false);\r\n  const [onlineList, setOnlineList] = useState<number[]>([]);\r\n\r\n  const toggleChannelCollapse = useCallback(() => {\r\n    setChannelCollapse((prev) => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('DMList: workspace 바꼈다', workspace);\r\n    setOnlineList([]);\r\n  }, [workspace]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: number[]) => {\r\n      setOnlineList(data);\r\n    });\r\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\r\n    return () => {\r\n      console.log('socket off dm', socket?.hasListeners('dm'));\r\n      socket?.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  return (\r\n    <>\r\n      <h2>\r\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\r\n          <i\r\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\r\n            data-qa=\"channel-section-collapse\"\r\n            aria-hidden=\"true\"\r\n          />\r\n        </CollapseButton>\r\n        <span>Direct Messages</span>\r\n      </h2>\r\n      <div>\r\n        {!channelCollapse &&\r\n          memberData?.map((member) => {\r\n            const isOnline = onlineList.includes(member.id);\r\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\r\n          })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DMList;\r\n","import fetcher from '@utils/fetcher';\r\nimport axios from 'axios';\r\nimport React, { VFC, useCallback, useState, useEffect } from 'react';\r\nimport { Redirect, Route, Switch, useParams } from 'react-router';\r\nimport useSWR from 'swr';\r\nimport {\r\n  AddButton,\r\n  Channels,\r\n  Chats,\r\n  Header,\r\n  LogOutButton,\r\n  MenuScroll,\r\n  ProfileImg,\r\n  ProfileModal,\r\n  RightMenu,\r\n  WorkspaceButton,\r\n  WorkspaceModal,\r\n  WorkspaceName,\r\n  Workspaces,\r\n  WorkspaceWrapper,\r\n} from './styles';\r\nimport gravatar from 'gravatar';\r\nimport loadable from '@loadable/component';\r\nimport Menu from '@components/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport { IChannel, IUser } from '@typings/db';\r\nimport Modal from '@components/Modal';\r\nimport { Button, Input, Label } from '@pages/SignUp/styles';\r\nimport useInput from '@hooks/useInput';\r\nimport { toast } from 'react-toastify';\r\nimport CreateChannelModal from '@components/createChannelModal';\r\nimport InviteWorkspaceModal from '@components/inviteWorkspaceModal';\r\nimport InviteChannelModal from '@components/inviteChannelModal';\r\nimport ChannelList from '@components/ChannelList';\r\nimport DMList from '@components/DMList';\r\nimport useSocket from '@hooks/useSocket';\r\n\r\nconst Channel = loadable(() => import('@pages/Channel'));\r\nconst DirectMessage = loadable(() => import('@pages/DirectMessage'));\r\n\r\nconst Workspace: VFC = () => {\r\n  const [showUserMenu, setShowUserMenu] = useState(false);\r\n  const [showCreateWorkspaceModal, setShowCreateWorkspaceModal] = useState(false);\r\n  const [showInviteWorkspaceModal, setShowInviteWorkspaceModal] = useState(false);\r\n  const [showInviteChannelModal, setShowInviteChannelModal] = useState(false);\r\n  const [showWorkspaceModal, setShowWorkspaceModal] = useState(false);\r\n  const [showCreateChannelModal, setShowCreateChannelModal] = useState(false);\r\n  const [newWorkspace, onChangeNewWorkspace, setNewWorkspace] = useInput('');\r\n  const [newUrl, onChangenewUrl, setnewUrl] = useInput('');\r\n\r\n  const { workspace } = useParams<{ workspace: string }>();\r\n  const { data: userData, error, mutate } = useSWR<IUser | false>('/api/users', fetcher);\r\n  const { data: channelData } = useSWR<IChannel[]>(userData ? `/api/workspaces/${workspace}/channels` : null, fetcher);\r\n\r\n  const [socket, disconnect] = useSocket(workspace);\r\n  useEffect(() => {\r\n    if (channelData && userData && socket) {\r\n      socket.emit('login', { id: userData.id, channels: channelData.map((v) => v.id) });\r\n    }\r\n  }, [socket, channelData, userData]);\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [workspace]);\r\n\r\n  const onLogout = useCallback(() => {\r\n    axios\r\n      .post('/api/users/logout', null, {\r\n        withCredentials: true,\r\n      })\r\n      .then(() => {\r\n        mutate();\r\n      });\r\n  }, []);\r\n\r\n  const onClickUserProfile = useCallback(() => {\r\n    setShowUserMenu((prev) => !prev);\r\n  }, []);\r\n\r\n  const onCloseUserProfile = useCallback((e) => {\r\n    e.stopPropagation();\r\n    setShowUserMenu(false);\r\n  }, []);\r\n\r\n  const onClickCreateWorkspace = useCallback(() => {\r\n    setShowCreateWorkspaceModal(true);\r\n  }, []);\r\n\r\n  const onCreateWorkspace = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (!newWorkspace || !newWorkspace.trim()) return;\r\n      if (!newUrl || !newUrl.trim()) return;\r\n      axios\r\n        .post('/api/workspaces', {\r\n          workspace: newWorkspace,\r\n          url: newUrl,\r\n        })\r\n        .then(() => {\r\n          mutate();\r\n          setShowCreateWorkspaceModal(false);\r\n          setNewWorkspace('');\r\n          setnewUrl('');\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          toast.error(err.response?.data, { position: 'bottom-center' });\r\n        });\r\n    },\r\n    [newWorkspace, newUrl],\r\n  );\r\n\r\n  const onCloseModal = useCallback(() => {\r\n    setShowCreateWorkspaceModal(false);\r\n    setShowCreateChannelModal(false);\r\n    setShowInviteChannelModal(false);\r\n    setShowInviteWorkspaceModal(false);\r\n  }, []);\r\n\r\n  const toggleWorkspaceModal = useCallback(() => {\r\n    setShowWorkspaceModal((prev) => !prev);\r\n  }, []);\r\n\r\n  const onClickAddChannel = useCallback(() => {\r\n    setShowCreateChannelModal(true);\r\n  }, []);\r\n\r\n  const onClickInviteworkspace = useCallback(() => {\r\n    setShowInviteWorkspaceModal(true);\r\n  }, []);\r\n\r\n  if (!userData) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Header>\r\n        <RightMenu>\r\n          <span onClick={onClickUserProfile}>\r\n            <ProfileImg src={gravatar.url(userData.email, { s: '28px', d: 'retro' })} alt={userData.nickname} />\r\n            {showUserMenu && (\r\n              <Menu show={showUserMenu} style={{ right: 0, top: 38 }} onCloseModal={onCloseUserProfile}>\r\n                <ProfileModal>\r\n                  <img src={gravatar.url(userData.email, { s: '36px', d: 'retro' })} alt={userData.nickname} />\r\n                  <div>\r\n                    <span id=\"profile-name\">{userData.nickname}</span>\r\n                    <span id=\"profile-active\">Active</span>\r\n                  </div>\r\n                </ProfileModal>\r\n                <LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\r\n              </Menu>\r\n            )}\r\n          </span>\r\n        </RightMenu>\r\n      </Header>\r\n      <WorkspaceWrapper>\r\n        <Workspaces>\r\n          {userData.Workspaces.map((ws) => {\r\n            return (\r\n              <Link key={ws.id} to={`/workspace/${ws.url}/channel/일반`}>\r\n                <WorkspaceButton>{ws.name.slice(0, 1).toUpperCase()}</WorkspaceButton>\r\n              </Link>\r\n            );\r\n          })}\r\n          <AddButton onClick={onClickCreateWorkspace}>+</AddButton>\r\n        </Workspaces>\r\n        <Channels>\r\n          <WorkspaceName onClick={toggleWorkspaceModal}>\r\n            {userData?.Workspaces.find((v) => v.url === workspace)?.name}\r\n          </WorkspaceName>\r\n          <MenuScroll>\r\n            <Menu show={showWorkspaceModal} onCloseModal={toggleWorkspaceModal} style={{ top: 95, left: 80 }}>\r\n              <WorkspaceModal>\r\n                <h2>{userData?.Workspaces.find((v) => v.url === workspace)?.name}</h2>\r\n                <button onClick={onClickInviteworkspace}>워크스페이스에 사용자 초대</button>\r\n                <button onClick={onClickAddChannel}>채널 만들기</button>\r\n                <button onClick={onLogout}>로그아웃</button>\r\n              </WorkspaceModal>\r\n            </Menu>\r\n            <ChannelList />\r\n            <DMList />\r\n          </MenuScroll>\r\n        </Channels>\r\n        <Chats>\r\n          <Switch>\r\n            <Route path=\"/workspace/:workspace/channel/:channel\" component={Channel} />\r\n            <Route path=\"/workspace/:workspace/dm/:id\" component={DirectMessage} />\r\n          </Switch>\r\n        </Chats>\r\n      </WorkspaceWrapper>\r\n      <Modal show={showCreateWorkspaceModal} onCloseModal={onCloseModal}>\r\n        <form onSubmit={onCreateWorkspace}>\r\n          <Label id=\"workspace-label\">\r\n            <span>워크스페이스 이름</span>\r\n            <Input id=\"workspace\" value={newWorkspace} onChange={onChangeNewWorkspace} />\r\n          </Label>\r\n          <Label id=\"workspace-url-label\">\r\n            <span>워크스페이스 url</span>\r\n            <Input id=\"workspace\" value={newUrl} onChange={onChangenewUrl} />\r\n          </Label>\r\n          <Button type=\"submit\">생성하기</Button>\r\n        </form>\r\n      </Modal>\r\n      <CreateChannelModal\r\n        show={showCreateChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowCreateChannelModal={setShowCreateChannelModal}\r\n      />\r\n      <InviteWorkspaceModal\r\n        show={showInviteWorkspaceModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteWorkspaceModal={setShowInviteWorkspaceModal}\r\n      />\r\n      <InviteChannelModal\r\n        show={showInviteChannelModal}\r\n        onCloseModal={onCloseModal}\r\n        setShowInviteChannelModal={setShowInviteChannelModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Workspace;\r\n"],"names":["CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","useCallback","e","onClick","setShowInviteChannelModal","useParams","workspace","channel","useInput","newMember","onChangeNewMember","setNewMember","userData","useSWR","fetcher","data","mutateMembers","mutate","onInviteMember","preventDefault","trim","axios","email","then","catch","error","console","dir","toast","response","position","onSubmit","id","value","onChange","type","sockets","disconnect","io","transports","info","undefined","RightMenu","Header","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Workspaces","Channels","WorkspaceName","MenuScroll","WorkspaceModal","Chats","AddButton","WorkspaceButton","CreateMenu","Menu","style","closeButton","defaultProps","setShowCreateChannelModal","newChannel","onChangeNewChannel","setNewChannel","mutateChannel","onCreateChannel","name","err","Modal","setShowInviteWorkspaceModal","revalidateMember","CollapseButton","collapse","location","useLocation","dedupingInterval","date","localStorage","getItem","count","useEffect","pathname","key","activeClassName","to","className","useState","channelCollapse","setChannelCollapse","channelData","toggleChannelCollapse","prev","map","member","isOnline","nickname","memberData","socket","useSocket","onlineList","setOnlineList","log","on","hasListeners","off","includes","Channel","loadable","DirectMessage","showUserMenu","setShowUserMenu","showCreateWorkspaceModal","setShowCreateWorkspaceModal","showInviteWorkspaceModal","showInviteChannelModal","showWorkspaceModal","setShowWorkspaceModal","showCreateChannelModal","newWorkspace","onChangeNewWorkspace","setNewWorkspace","newUrl","onChangenewUrl","setnewUrl","emit","channels","v","onLogout","withCredentials","onClickUserProfile","onCloseUserProfile","onClickCreateWorkspace","onCreateWorkspace","url","toggleWorkspaceModal","onClickAddChannel","onClickInviteworkspace","src","gravatar","s","d","alt","right","top","ws","slice","toUpperCase","find","left","path","component"],"sourceRoot":""}